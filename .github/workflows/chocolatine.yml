name: chocolatine

env:
  MIRROR_URL: git@github.com:EpitechPGEPromo2029/B-DOP-200-LIL-2-1-chocolatine-thomas.villot.git
  EXECUTABLE: ./anagram

on:
  push:
    branches-ignore:
      - "ga-ignore"
  pull_request:
    branches-ignore:
      - "ga-ignore"
  check_run:
    types: [rerequested, completed]

jobs:
  check_repository:
    runs-on: ubuntu-latest
    outputs:
      should_continue: ${{ steps.check_repo.outputs.should_continue }}
    steps:
      - uses: actions/checkout@v4
      - name: Check if repository is the mirror
        id: check_repo
        run: |
          if [[ "git@github.com:${{ github.repository }}.git" == "${{env.MIRROR_URL}}" ]]; then
            echo "Already in Epitech repository, no need to continue"
            echo "should_continue=false" >> "$GITHUB_OUTPUT"
          else
            echo "Running on fork, continue workflow"
            echo "should_continue=true" >> "$GITHUB_OUTPUT"
          fi

  check_coding_style:
    needs: check_repository
    if: ${{ needs.check_repository.outputs.should_continue == 'true' }}
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v4
      - name: Run coding style checker
        run: |
          check.sh $(pwd) $(pwd)
          if [ ! -s "coding-style-reports.log" ]; then
            echo "Coding style OK"
          else
            echo "Coding style errors detected"
            exit 1
          fi

  check_program_compilation:
    needs: check_coding_style
    if: ${{ needs.check_repository.outputs.should_continue == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
      - name: Build project
        run: |
          make
          if [ ! -f "${{ env.EXECUTABLE }}" ]; then
            echo "Compilation failed: Executable not found"
            exit 1
          fi
      - name: Clean project
        run: make clean

  run_tests:
    needs: check_program_compilation
    if: ${{ needs.check_repository.outputs.should_continue == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 2
    container:
      image: epitechcontent/epitest-docker
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: |
          make tests_run

  push_to_mirror:
    needs: [check_repository, run_tests]
    if: ${{ needs.check_repository.outputs.should_continue == 'true' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Mirror to target repository
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ env.MIRROR_URL }}
          ssh_private_key: ${{ secrets.GIT_SSH_PRIVATE_KEY }}